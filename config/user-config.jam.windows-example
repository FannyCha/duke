project user-config ;

# This file configures the external libraries needed by duke.
# See README for more details.

############ warning for windows users ############
# -> MinGW
#
# if you haven't already done so please read  
# INSTALL-MINGW.md file in the root folder.
#
# -> Paths
#
# if your path is C:\PATH\TO\FILE
# you must write it C:/PATH/TO/FILE
#
# -> dll redistribution
#
# you don't need to add path to your dlls but doing
# so will automatically add them to the dist folder
# easing the distribution process
###################################################

#----------------------------------------#
#    Mandatory libraries                 #
#----------------------------------------#

#-----------------------------------------------------------------------------
# name     : MinGW runtime
# purpose  : provides automatic reditribution of MinGW's runtime   
#-----------------------------------------------------------------------------
constant MINGW_ROOT : C:/MinGW/bin ;

lib mwingw_runtime : :  <file>$(MINGW_ROOT)/libgcc_s_dw2-1.dll
                        <file>$(MINGW_ROOT)/libstdc++-6.dll
                        ;

#-----------------------------------------------------------------------------
# name     : Google Protocolbuffer
# purpose  : Defines duke's protocol to communicate internally and with other
#            applications  
# website  : http://code.google.com/p/protobuf/
# download : http://code.google.com/p/protobuf/downloads/list
#-----------------------------------------------------------------------------
constant PB_ROOT : C:/lib/protobuf ;

lib protobuf : : <file>$(PB_ROOT)/lib/libprotobuf.a
             : : <include>$(PB_ROOT)/include ;

# also define PROTOC the protocol buffer compiler
constant PROTOC : $(PB_ROOT)/bin/protoc.exe ; 


#-----------------------------------------------------------------------------
# name     : Cg
# purpose  : Graphical toolkit
# website  : http://developer.nvidia.com/cg-toolkit
# download : http://http.developer.nvidia.com/Cg/index_releases.html
#-----------------------------------------------------------------------------
constant CG_ROOT : "C:/Program Files (x86)/NVIDIA Corporation/Cg" ;

lib cg : : 	<file>$(CG_ROOT)/lib/cg.lib
		<file>$(CG_ROOT)/bin/cg.dll
	   : : 	<include>$(CG_ROOT)/include ;

#-----------------------------------------------------------------------------
# name     : CgGL
# purpose  : Graphical toolkit - OpenGL backend
# website  : http://developer.nvidia.com/cg-toolkit
# download : http://developer.nvidia.com/cg-toolkit-download
#-----------------------------------------------------------------------------
lib opengl32 ;
lib gdi32 ;
lib cggl : gdi32 opengl32 :
             <file>$(CG_ROOT)/lib/cgGL.lib
             <file>$(CG_ROOT)/lib/glut32.lib
	     <file>$(CG_ROOT)/bin/cgGL.dll
	 : : <include>$(CG_ROOT)/include ;

#-----------------------------------------------------------------------------
# name     : GLEW
# purpose  : Graphical toolkit - OpenGL backend
# website  : http://glew.sourceforge.net/
# download : http://sourceforge.net/projects/glew/files/glew/1.6.0
#-----------------------------------------------------------------------------
constant GLEW_ROOT : C:/lib/glew-1.8.0 ;

lib GLEW : : <file>$(GLEW_ROOT)/lib/libglew32.dll.a
             <file>$(GLEW_ROOT)/lib/glew32.dll
         : : <include>$(GLEW_ROOT)/include ;
         
#-----------------------------------------------------------------------------
# name     : Qt
# purpose  : GUI framework used by DukeX
# website  : http://qt.nokia.com
# download : http://qt.nokia.com/downloads
#-----------------------------------------------------------------------------
constant QT_ROOT : C:/lib/qt-everywhere-opensource-src-4.8.2 ;

using qt4 : $(QT_ROOT) ; 
alias Qt : : : : 
	<toolset>gcc:<library>/qt//QtCore/<variant>release/<link>shared
	<toolset>gcc:<library>/qt//QtOpenGL/<variant>release/<link>shared
	<toolset>gcc:<library>/qt//QtGui/<variant>release/<link>shared
	<toolset>gcc:<file>$(QT_ROOT)/bin/QtCore4.dll
	<toolset>gcc:<file>$(QT_ROOT)/bin/QtOpenGL4.dll
	<toolset>gcc:<file>$(QT_ROOT)/bin/QtGui4.dll
	;


#----------------------------------------#
#   Optional  libraries                  #
#----------------------------------------#

# The optionnal libraries can be excluded from the build by using
# the --no-plugin-* flag. 
	     
#-----------------------------------------------------------------------------
# name     : TurboJpeg
# purpose  : adds support for jpeg (plugin)
# website  : http://sourceforge.net/projects/libjpeg-turbo/
# download : http://sourceforge.net/projects/libjpeg-turbo/files/1.1.1/
#-----------------------------------------------------------------------------
constant TJPEG_ROOT : C:/lib/libjpeg-turbo ;

lib turbojpeg : : <file>$(TJPEG_ROOT)/lib/libturbojpeg.dll.a
                  <file>$(TJPEG_ROOT)/bin/libturbojpeg.dll
              : : <include>$(TJPEG_ROOT)/include ;


#-----------------------------------------------------------------------------
# name     : OpenImageIO
# purpose  : adds support for various file format (plugin)
# website  : https://sites.google.com/site/openimageio/home
# download : https://github.com/OpenImageIO/oiio
#-----------------------------------------------------------------------------
#lib oiio : : <file>C:/PATH/TO/OPENIMAGEIO-LIB/libOpenImageIO.a
#             <file>C:/PATH/TO/ADDITIONAL-DLL/png.dll
#         : : <include>C:/PATH/TO/OPENIMAGEIO/include ;


#-----------------------------------------------------------------------------
## prevent building targets by default
## more info here http://www.boost.org/boost-build2/doc/html/bbv2/reference/rules.html
explicit protobuf cg cggl turbojpeg oiio ;
#-----------------------------------------------------------------------------


#---------------------------------------#
#    Congratulations ! You're done :)   #
#    Uncomment the following line.      #
#---------------------------------------#
#constant duke_user_configuration : true ;