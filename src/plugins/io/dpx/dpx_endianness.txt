Facts
=====

* x86 platforms are little-endian architectures : http://en.wikipedia.org/wiki/Endianness#Endianness_and_hardware
Because of the way the file is mapped to registers, the CPU register's endianness is reversed from the file endianness.
Thus if you open a file in an hex editor, what you see within the file will have its endianness reversed compared
to what you will be reading in the CPU registers. 
	
REVERSED ENDIANNESS compared to x86 (=big endian) <- almost always the case
=================================================
in memory		"XPDS" (0x58504453)
	HEX			DEC			BIN
R	0000C0FF	49407		00000000 00000000 11000000 11111111
G	00F03F00	15744768	00000000 11110000 00111111 00000000
B	FC0F0000	4228841472	11111100 00001111 00000000 00000000
W	FCFFFFFF	4244635647	11111100 11111111 11111111 11111111

on disk			"SDPX" (0x53445058)
	HEX			DEC			BIN
R	FFC00000	4290772992	11111111 11000000 00000000 00000000
G	003FF000	4190208		00000000 00111111 11110000 00000000
B	00000FFC	4092		00000000 00000000 00001111 11111100
W	FFFFFFFC	4294967292	11111111 11111111 11111111 11111100


SAME ENDIANNESS as x86 (=little endian) <- almost never the case
=======================================
in memory		"SDPX" (0x53445058)
	HEX			DEC			BIN
R	FFC00000	4290772992	11111111 11000000 00000000 00000000
G	003FF000	4190208		00000000 00111111 11110000 00000000
B	00000FFC	4092		00000000 00000000 00001111 11111100
W	FFFFFFFC	4294967292	11111111 11111111 11111111 11111100

on disk			"XPDS" (0x58504453)
	HEX			DEC			BIN
R	0000C0FF	49407		00000000 00000000 11000000 11111111
G	00F03F00	15744768	00000000 11110000 00111111 00000000
B	FC0F0000	4228841472	11111100 00001111 00000000 00000000
W	FCFFFFFF	4244635647	11111100 11111111 11111111 11111111